#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Probes for new event results from the UPA.
# Because of the content system they're using, only the last
# NUMPAGES event pages are checked (10 results per page), so if
# checking isn't done often enough, things might get lost.
# Uses a similar system as the SPF (WordPress, Tribe).


from bs4 import BeautifulSoup
import datetime
import os
import shutil
import sys
import urllib.request


# If NUMPAGES is very large, iteration stops at the first 404.
NUMPAGES = 2 # Number of pages to go through, 10 results per page.
FEDDIR = os.path.dirname(os.path.realpath(__file__))
FEDURL = "http://www.upapower.com/development/?cat=52"


def getpageurl(n):
    return FEDURL + "&paged=" + str(n)


def error(msg):
    print(msg, file=sys.stderr)
    sys.exit(1)


def color(s):
    return "\033[1;31m" + s + "\033[0;m"


def gethtml(url):
    with urllib.request.urlopen(url) as r:
        return r.read()


def getmeetlist(html):
    soup = BeautifulSoup(html, 'html.parser')

    events = soup.find_all("p", {"class": "read-more"})

    urls = []
    for e in events:
        for a in e.find_all('a'):
            url = a['href']
            if not url in urls: # Sometimes the entries show up twice.
                urls.append(url)

    return urls


def getenteredurls():
    urls = []
    for dirname, subdirs, files in os.walk(FEDDIR):
        if 'URL' in files:
            with open(dirname + os.sep + 'URL', 'r') as fd:
                for k in fd.readlines():
                    urls.append(k.strip())
    return urls


def main():
    meetlist = []

    # Iterate through pages until the site returns a 404.
    for i in range(1, NUMPAGES+1):
        url = getpageurl(i)
        try:
            html = gethtml(url)
        except urllib.error.HTTPError:
            break
        meets = getmeetlist(html)
        meetlist = meetlist + meets

    known = getenteredurls()

    for m in meetlist:
        if not m in known:
            print(color('[UPA] ') + m)

if __name__ == '__main__':
    main()
