#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Probes for new meets from the IPF.
# One main page branches to a page per-year,
# all of which must be checked.
#


from bs4 import BeautifulSoup
import datetime
import os
import shutil
import sys
import urllib.request


URLS = ["http://www.powerlifting-ipf.com/championships/results/"]
BASEURL = "http://www.powerlifting-ipf.com/"
FEDDIR = os.path.dirname(os.path.realpath(__file__))


def error(msg):
    print(msg, file=sys.stderr)
    sys.exit(1)


def color(s):
    return "\033[1;34m" + s + "\033[0;m"


def gethtml(url):
    with urllib.request.urlopen(url) as r:
        return r.read()


def getmeetlist(html):
    soup = BeautifulSoup(html, 'html.parser')

    sections = soup.find_all("section", {"id": "main_content"})
    if len(sections) == 0:
        error("Page layout seems to have changed.")
    elif len(sections) > 1:
        error("Multiple result areas found.")

    # The main page gives a list of sub-pages, each of which contain
    # results for a year or for a group of years.
    searchurls = []
    for a in sections[0].find_all('a'):
        url = a['href']
        if not 'http' in url:
            url = BASEURL + url
            url = url.replace('.com//','/')
        if not url in searchurls:
            # Ignore some URLs that are clearly bogus.
            if 'worldpowerlifting.info' in url:
                continue
            searchurls.append(url)

    urls = []

    # Do a lookup for each page.
    for searchurl in searchurls:
        html = gethtml(searchurl)
        soup = BeautifulSoup(html, 'html.parser')

        sections = soup.find_all("section", {"id": "main_content"})
        if len(sections) == 0:
            error("Child page layout seems to have changed.")
        elif len(sections) > 1:
            error("Multiple result areas found.")

        for a in sections[0].find_all('a'):
            url = a['href']

            if not 'http' in url:
                url = BASEURL + url
                url = url.replace('.com//','/')
            if not url in urls:
                urls.append(url)

    return urls


def getenteredurls():
    urls = []
    for dirname, subdirs, files in os.walk(FEDDIR):
        if 'URL' in files:
            with open(dirname + os.sep + 'URL', 'r') as fd:
                for k in fd.readlines():
                    urls.append(k.strip())
    return urls


def main():
    meetlist = []
    for url in URLS:
        html = gethtml(url)
        meetlist = meetlist + getmeetlist(html)

    known = getenteredurls()

    for m in meetlist:
        if not m in known:
            print(color('[IPF] ') + m)


if __name__ == '__main__':
    main()
